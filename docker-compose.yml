version: '3.8'

services:

  # Zookeeper for Kafka coordination
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - ai-assurance-net

  # Kafka broker for telemetry ingestion
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "kafka:9092", "--list"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - ai-assurance-net

  # Kafka topic initializer
  kafka-init:
    build: ./services/kafka-init
    depends_on:
      - kafka
    restart: "no"
    networks:
      - ai-assurance-net

  # TIB producer service (sends messages to Kafka)
  tib-producer:
    build: ./services/tib-producer
    depends_on:
      - kafka
    command: python producer.py
    networks:
      - ai-assurance-net

  # MMS consumer service (reads and processes Kafka messages)
  mms-consumer:
    build:
      context: ./services/mms-consumer
    container_name: ai-assurance-quality-tool-mms-consumer
    depends_on:
      kafka:
        condition: service_healthy
    restart: on-failure
    networks:
      - ai-assurance-net

  # TIB producer API (receives payloads from ASA)
  tib-producer-api:
    build: ./services/tib-producer-api
    ports:
      - "8002:8000"
    depends_on:
      - kafka
    restart: on-failure
    networks:
      - ai-assurance-net

  # Quality Baseline Service (QBS)
  baseline-service:
    build: ./services/baseline
    ports:
      - "8000:8000"
    restart: on-failure
    networks:
      - ai-assurance-net

  # Assurance Sidecar Agent (ASA)
  sidecar-agent:
    build: ./services/sidecar-agent
    depends_on:
      - tib-producer-api
    entrypoint: ["sh", "-c", "sleep 10 && python agent.py"]
    restart: on-failure
    networks:
      - ai-assurance-net

networks:
  ai-assurance-net:
    driver: bridge