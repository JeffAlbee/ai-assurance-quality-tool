🧠 AI Assurance Quality Stack — System Overview

🔧 Core Components
Layer	Component	Purpose
Frontend	React + Vite Dashboard	UI for stakeholders to view metrics, violations, and configure models
Backend API	FastAPI	Serves /health, /v1/metrics, /v1/models/active, /v1/model/config
Consumer	mms-consumer/consumer.py	Kafka consumer that ingests telemetry, computes metrics, writes to Redis
Storage	Redis	Stores latest and historical metrics keyed by model ID
Monitoring	Grafana	Visualizes metrics from Redis, MMS API, and history API
Messaging	Kafka	Streams live telemetry from models to consumer

📦 Data Flow Summary
Model sends telemetry → Kafka
Kafka → consumer.py → Redis
    Extracts model_id, txid_hash
    Computes metrics
    Writes:
        metrics:{model_id} (latest)
        metrics:{model_id}:{timestamp} (historical)
        
Grafana pulls from Redis + MMS API
    Redis: live metrics
    MMS API: composite scores, assurance labels
    history.api: violation logs

React dashboard embeds Grafana panels + shows latest labels

🧪 Key Redis Keys
    metrics:{model_id} → latest snapshot
    metrics:{model_id}:{timestamp} → historical snapshot
    Example:
        metrics:flood-risk-predictor
        metrics:flood-risk-predictor:2025-10-27T16_22_57Z

🖥️ React Dashboard Tabs
Tab Name	Purpose
Real-Time Metrics	Embedded Grafana panel for live metrics
Assurance Label	Shows latest label + snapshot metrics via MetricDashboard
Violations	Violation breakdown via ViolationDashboard
Baseline & Tolerances	Embedded Grafana panel for thresholds
Model Configuration	Lists active models, connects to endpoints, saves config
License	Shows license status and upgrade options

🔌 FastAPI Endpoints
Endpoint	Purpose
/health	Health check for model endpoint
/v1/models/active	Lists active models
/v1/model/config	Saves model name + endpoint config
/v1/metrics/latest	(planned) Returns latest metrics
/v1/violations	(planned) Returns violation logs


jeffalbee@Jeffreys-MacBook-Air ai-assurance-quality-tool % tree -L 3


I have a history.api, MMS Metrics and Redis data source configured in Grafana.

My Models and Payload is as follows: 
jeffalbee@Jeffreys-MacBook-Air ai-assurance-quality-tool % redis-cli KEYS "metrics:*"
1) "metrics:flood-risk-predictor"
2) "metrics:flood-risk-predictor:2025-10-27T16_22_57Z"
jeffalbee@Jeffreys-MacBook-Air ai-assurance-quality-tool % redis-cli GET "metrics:flood-risk-predictor"
"{\"timestamp\": \"2025-10-27T16_22_57Z\", \"metrics\": {\"accuracy\": 0.92, \"rmse\": 1.2, \"feature_drift\": 0.03, \"domain_violation_count\": 2, \"failure_rate\": 0.01, \"watts_per_inference\": 42.0, \"confidence_floor\": 0.9, \"confidence_variance\": 0.04}}"
jeffalbee@Jeffreys-MacBook-Air ai-assurance-quality-tool % 

My Folder & File Structure is this: 
.
├── assurance-dashboard
│   ├── eslint.config.js
│   ├── index.html
│   ├── node_modules
│   │   ├── @babel
│   │   ├── @esbuild
│   │   ├── @eslint
│   │   ├── @eslint-community
│   │   ├── @humanfs
│   │   ├── @humanwhocodes
│   │   ├── package-lock.json
│   ├── package.json
│   ├── public
│   │   ├── AIA_BB_flavicon.png
│   │   ├── AIA_BB_Logo_horiz_FIN.png
│   │   ├── bitcoin_qr.png
│   │   └── vite.svg
│   ├── README.md
│   ├── src
│   │   ├── App.css
│   │   ├── App.jsx
│   │   ├── assets
│   │   ├── index.css
│   │   ├── LabelTable.jsx
│   │   ├── main.jsx
│   │   ├── MetricDashboard.jsx
│   │   ├── ModelConfigForm.jsx
│   │   └── ViolationDashboard.jsx
│   ├── tailwind.config.js
│   └── vite.config.js
├── Commit.txt
├── docker-compose.yml
├── frontend
├── grafana
├── helm
├── init-scripts
├── inject_label.py
├── logs
│   └── inference.log
├── mms-env
│   ├── bin
│   │   ├── activate
│   │   ├── activate.csh
│   │   ├── activate.fish
│   │   ├── Activate.ps1
│   │   ├── f2py
│   │   ├── numpy-config
│   │   ├── pip
│   │   ├── pip3
│   │   ├── pip3.11
│   │   ├── python -> python3.11
│   │   ├── python3 -> python3.11
│   │   └── python3.11 -> /usr/local/opt/python@3.11/bin/python3.11
│   ├── include
│   │   └── python3.11
│   ├── lib
│   │   └── python3.11
│   └── pyvenv.cfg
├── node_modules
│   ├── asynckit
│   │   ├── bench.js
│   │   ├── index.js
│   │   ├── lib
│   │   ├── LICENSE
│   │   ├── package.json
│   │   ├── parallel.js
│   │   ├── README.md
│   │   ├── serial.js
│   │   ├── serialOrdered.js
│   │   └── stream.js
│   ├── axios
│   │   ├── CHANGELOG.md

│   ├── call-bind-apply-helpers
│   │   ├── actualApply.d.ts
│   │   ├── actualApply.js

│   ├── combined-stream
│   │   ├── lib
│   │   ├── License
│   │   ├── package.json
│   │   ├── Readme.md
│   │   └── yarn.lock
│   ├── delayed-stream
│   │   ├── lib
│   │   ├── License
│   │   ├── Makefile
│   │   ├── package.json
│   │   └── Readme.md
│   ├── dunder-proto
│   │   ├── CHANGELOG.md
│   │   ├── get.d.ts
│   │   ├── get.js
│   │   ├── LICENSE
│   │   ├── package.json
│   │   ├── README.md
│   │   ├── set.d.ts
│   │   ├── set.js
│   │   ├── test
│   │   └── tsconfig.json
│   ├── es-define-property
│   │   ├── CHANGELOG.md
│   │   ├── index.d.ts
│   │   ├── index.js
│   │   ├── LICENSE
│   │   ├── package.json
│   │   ├── README.md
│   │   ├── test
│   │   └── tsconfig.json
│   ├── es-errors
│   │   ├── CHANGELOG.md
│   │   ├── eval.d.ts

│   ├── es-object-atoms
│   │   ├── CHANGELOG.md
│   │   ├── index.d.ts
│   │   ├── index.js

│   ├── es-set-tostringtag
│   │   ├── CHANGELOG.md
│   │   ├── index.d.ts
│   │   ├── index.js
│   │   ├── LICENSE
│   │   ├── package.json
│   │   ├── README.md
│   │   ├── test
│   │   └── tsconfig.json
│   ├── follow-redirects
│   │   ├── debug.js
│   │   ├── http.js
│   │   ├── https.js
│   │   ├── index.js
│   │   ├── LICENSE
│   │   ├── package.json
│   │   └── README.md
│   ├── form-data
│   │   ├── CHANGELOG.md
│   │   ├── index.d.ts
│   │   ├── lib
│   │   ├── License
│   │   ├── package.json
│   │   └── README.md
│   ├── function-bind
│   │   ├── CHANGELOG.md
│   │   ├── implementation.js
│   │   ├── index.js
│   │   ├── LICENSE
│   │   ├── package.json
│   │   ├── README.md
│   │   └── test
│   ├── get-intrinsic
│   │   ├── CHANGELOG.md
│   │   ├── index.js
│   │   ├── LICENSE
│   │   ├── package.json
│   │   ├── README.md
│   │   └── test
│   ├── get-proto
│   │   ├── CHANGELOG.md
│   │   ├── index.d.ts
│   │   ├── index.js
│   │   ├── LICENSE
│   │   ├── Object.getPrototypeOf.d.ts
│   │   ├── Object.getPrototypeOf.js
│   │   ├── package.json
│   │   ├── README.md
│   │   ├── Reflect.getPrototypeOf.d.ts
│   │   ├── Reflect.getPrototypeOf.js
│   │   ├── test
│   │   └── tsconfig.json
│   ├── gopd
│   │   ├── CHANGELOG.md
│   │   ├── gOPD.d.ts
│   │   ├── gOPD.js
│   │   ├── index.d.ts
│   │   ├── index.js
│   │   ├── LICENSE
│   │   ├── package.json
│   │   ├── README.md
│   │   ├── test
│   │   └── tsconfig.json
│   ├── has-symbols
│   │   ├── CHANGELOG.md
│   │   ├── index.d.ts
│   │   ├── index.js
│   │   ├── LICENSE
│   │   ├── package.json
│   │   ├── README.md
│   │   ├── shams.d.ts
│   │   ├── shams.js
│   │   ├── test
│   │   └── tsconfig.json
│   ├── has-tostringtag
│   │   ├── CHANGELOG.md
│   │   ├── index.d.ts
│   │   ├── index.js
│   │   ├── LICENSE
│   │   ├── package.json
│   │   ├── README.md
│   │   ├── shams.d.ts
│   │   ├── shams.js
│   │   ├── test
│   │   └── tsconfig.json
│   ├── hasown
│   │   ├── CHANGELOG.md
│   │   ├── index.d.ts
│   │   ├── index.js
│   │   ├── LICENSE
│   │   ├── package.json
│   │   ├── README.md
│   │   └── tsconfig.json
│   ├── math-intrinsics
│   │   ├── abs.d.ts

│   ├── mime-db
│   │   ├── db.json
│   │   ├── HISTORY.md
│   │   ├── index.js
│   │   ├── LICENSE
│   │   ├── package.json
│   │   └── README.md
│   ├── mime-types
│   │   ├── HISTORY.md
│   │   ├── index.js
│   │   ├── LICENSE
│   │   ├── package.json
│   │   └── README.md
│   └── proxy-from-env
│       ├── index.js
│       ├── LICENSE
│       ├── package.json
│       ├── README.md
│       └── test.js
├── package-lock.json
├── package.json
├── services
│   ├── assurance-service
│   │   ├── Dockerfile
│   │   ├── history.py
│   │   ├── reporter.py
│   │   └── requirements.txt
│   ├── baseline
│   │   ├── baseline.py
│   │   ├── database.py
│   │   ├── dockerfile
│   │   ├── models.py
│   │   └── requirements.txt
│   ├── kafka-init
│   │   ├── create-topics.sh
│   │   └── dockerfile
│   ├── mms-api
│   │   ├── app.py
│   │   └── dockerfile
│   ├── mms-consumer
│   │   ├── consumer.py
│   │   ├── dockerfile
│   │   ├── requirements.txt
│   │   ├── sample_payload.json
│   │   ├── send_sample.py
│   │   └── wait_for_kafka.py
│   ├── model-builder
│   │   ├── __pycache__
│   │   ├── app.py
│   │   ├── dockerfile
│   │   ├── FloodRiskModel.pkl
│   │   ├── generate_dummy_data.py
│   │   ├── logs
│   │   ├── metrics.py
│   │   ├── model.py
│   │   ├── requirements.txt
│   │   ├── train_model.py
│   │   └── training_data.csv
│   ├── sidecar-agent
│   │   ├── agent.py
│   │   ├── Dockerfile
│   │   └── requirements.txt
│   └── tib-producer-api
│       ├── Dockerfile
│       └── ingest.py
├── tree.txt
└── venv
    ├── bin
    │   ├── activate
    │   ├── activate.csh
    │   ├── activate.fish
    │   ├── Activate.ps1
    │   ├── dotenv
    │   ├── fastapi
    │   ├── pip
    │   ├── pip3
    │   ├── pip3.14
    │   ├── python -> python3.14
    │   ├── python3 -> python3.14
    │   ├── python3.14 -> /usr/local/opt/python@3.14/bin/python3.14
    │   ├── 𝜋thon -> python3.14
    │   └── uvicorn
    ├── include
    ├── lib
    │   └── python3.14
    └── pyvenv.cfg



